<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[jmol]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://jmolboy.com/"/>
  <updated>2015-11-02T10:02:13.000Z</updated>
  <id>http://jmolboy.com/</id>
  
  <author>
    <name><![CDATA[Jmol]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[开始nodejs]]></title>
    <link href="http://jmolboy.com/2015/10/26/beginlearnnode/"/>
    <id>http://jmolboy.com/2015/10/26/beginlearnnode/</id>
    <published>2015-10-25T17:39:47.000Z</published>
    <updated>2015-11-02T10:02:13.000Z</updated>
    <content type="html"><![CDATA[<p>其实几年前就听说了node，只是当时了解到js可以运行于服务器端，的确赶到很兴奋；但是…因为各种原因，一直从未真正去学习它，更为真实应用过；近来来在做项目处理数据同步请求队列时，发现请求处理的不及时，导致效率如此低；<a id="more"></a>原因是php在发送请求后一直会在等待接口的响应，响应结束业务才会继续往下走；那么有没有一种方法可以发送完请求，不block在这里，可以继续处理后续的逻辑的技术呢；这时才想到node的非阻塞异步I/O，顿时眼前一亮啊…</p>
<p><img src="http://7xnu0w.com1.z0.glb.clouddn.com/node.png" alt="Node"></p>
<h3 id="资料集">资料集</h3><ul>
<li><p><a href="https://nodejs.org/]" target="_blank" rel="external">node官网网站</a> 下载安装、看文档、看文档、找源码</p>
</li>
<li><p><a href="http://fengmk2.com/blog/2014/03/node-env-and-faster-npm.html" target="_blank" rel="external">快速搭建 Node.js 开发环境以及加速npm</a></p>
</li>
<li><p><a href="https://github.com/nqdeng/7-days-nodejs" target="_blank" rel="external">七天学会NodeJS</a> 很好的node简单介绍</p>
</li>
<li><p><a href="http://www.nodebeginner.org/index-zh-cn.html" target="_blank" rel="external">node入门</a> 在线书籍</p>
</li>
<li><p><a href="https://developers.google.com/v8/" target="_blank" rel="external">google V8引擎</a> 解析nodejs的V8引擎介绍</p>
</li>
<li><p><a href="https://github.com/youyudehexie/node123" target="_blank" rel="external">node.js中文资料导航</a></p>
</li>
<li><p><a href="https://github.com/cnodejs/nodeclub/wiki/%E5%90%8D%E4%BA%BA%E5%A0%82" target="_blank" rel="external">nodejs名人堂</a> node届的大牛们 </p>
</li>
<li><p><a href="https://cnodejs.org/" target="_blank" rel="external">node中文社区</a> 这里有很多技术大牛哦，当然还有他们的分享</p>
<p><br>     </p>
</li>
</ul>
<h3 id="优秀的开源node项目">优秀的开源node项目</h3><p>Nodejs之所以从2009年问世后如此被大家追捧，除了它的异步I/O(基于事件机制的回调)和体现出的高性能；还有个更重要的原因是它是基于javascript来开发(当然还可以结合C++)，这就降低了学习的门槛，前端开发的童鞋顿时可以借此进入服务器端开发；所以社区也变得异常活跃，各种码农们开始贡献自己的源码，使它成为了<a href="https://github.com/" target="_blank" rel="external">Github</a>排名第二的开源项目；</p>
<p>目前有好多大型高流量网站采用了它，像Paypal,支付宝,腾讯等；当然除了web，nodejs也被应用在许多方面，基于nodejs诞生了很多让人惊奇的项目，这些项目涉及到应用程序监控、媒体流、远程控制、桌面和移动应用等方面</p>
<ul>
<li><p><a href="http://node-os.com/" target="_blank" rel="external">NodeOS</a>       </p>
<p>  NodeOS是基于linux内核上采用Nodejs开发的操作系统，采用npm进行包管理，目前，Docker和Vagrant都是采用NodeOS的首个版本进行构建的<br><img src="http://7xnu0w.com1.z0.glb.clouddn.com/nodeos.png" alt="nodeos"></p>
</li>
<li><p><a href="http://nwjs.io/" target="_blank" rel="external">NW(node-webkit)</a></p>
<p>  Node-Webkit是一个基于Chromium与NodeJS的应用程序运行器，允许开发者使用Web技术编写桌面应用；它是NodeJS与WebKit技术的融合，提供一个跨Windows、Linux平台的客户端应用开发的底层框架；跨平台开发并非易事，其中一种方式便是使用Web技术和Node-Webkit开发桌面应用来代替那些庞大且笨重的开发框架。<br><img src="http://7xnu0w.com1.z0.glb.clouddn.com/nodewebkit.jpg" alt="npm"></p>
</li>
<li><p><a href="http://logio.org/" target="_blank" rel="external">logio</a></p>
<p>  一个时时日志监控项目，基于nodejs的Socket.io库<br><img src="http://7xnu0w.com1.z0.glb.clouddn.com/logio.png" alt="logio"><br><br></p>
</li>
</ul>
<h3 id="什么都node?">什么都node?</h3><p>说过了node的异步I/O和其高性能，同时它可以运行与服务端，甚至可以作为服务器，那它究竟适合使用在哪些场合呢？(自然不是所有，千万不要脑袋发热，我们老板听说Nodejs很好，所以要将项目迁移到node上来)作为一个开发，必须要保持对技术和产品的冷静，盲目的跃进和夸海口最终只会功亏一篑，因为彼只知其外而不知其内；适合使用Node的场景:</p>
<ul>
<li>处理高并发</li>
<li>I/O密集型应用</li>
<li>大量Ajax请求的应用</li>
<li>JSON API应用(可以很轻松的写出RestApi)</li>
<li>单页面应用</li>
<li>实时通讯(基于Socket.io)</li>
<li>…</li>
</ul>
<p><br></p>
<p>ps: 已经开始node了，除了惊喜，更多的是充实感和满足感！！！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>其实几年前就听说了node，只是当时了解到js可以运行于服务器端，的确赶到很兴奋；但是…因为各种原因，一直从未真正去学习它，更为真实应用过；近来来在做项目处理数据同步请求队列时，发现请求处理的不及时，导致效率如此低；]]>
    
    </summary>
    
      <category term="learning" scheme="http://jmolboy.com/tags/learning/"/>
    
      <category term="node" scheme="http://jmolboy.com/tags/node/"/>
    
      <category term="thought" scheme="http://jmolboy.com/tags/thought/"/>
    
      <category term="learning" scheme="http://jmolboy.com/categories/learning/"/>
    
  </entry>
  
</feed>
